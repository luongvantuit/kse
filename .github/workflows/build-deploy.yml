name: Deployment project to server

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Build actions checkout
      - uses: actions/setup-node@v3
        name: Build Node.JS with version 16.15.1
        with:
          node-version: 16.15.1
      - run: npm install
        name: Npm install package backend working directory
        working-directory: be
      - run: npm build
        name: Npm build project backend
        working-directory: be
      - run: npm install
        name: Npm install package frontend working directory
        working-directory: fe
      - run: npm build
        name: Npm build project frontend
        working-directory: fe
  docker:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Build Docker actions checkout
      - run: docker version
        name: Docker version
      - run: docker-compose up --build be
        name: Run Docker Compose up build backend
      - run: docker-compose up --build fe
        name: Run Docker Compose up build frontend
  deploy:
    needs: [build, docker]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Deployment action checkout
      - uses: appleboy/ssh-action@master
        name: Run deploy with SSH
        if: github.ref == 'refs/heads/master' && github.event_name = 'push'
        with:
          host: ${{secrets.SERVER_HOST}}
          username: ${{secrets.SERVER_USER}}
          password: ${{secrets.SERVER_PASSWORD}}
          port: ${{secrets.SERVER_PORT}}
          script: |
            echo "--- Update package ---"
            sudo apt update 
            sudo apt upgrade -y
            if [ -x "$(command -v docker)" ]; then
              echo "--- Update Docker ---"
              sudo apt-get upgrade docker-engine -y
            else
              echo "--- Install Docker Engine"
              sudo apt-get update -y
              sudo apt-get install ca-certificates curl gnupg lsb-release -y
              sudo mkdir -p /etc/apt/keyrings
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
              echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt-get update -y
              sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y
            fi
            echo "--- Docker version ---"
            docker version
            echo "--- Check git version ---"
            if [ -x "$(which git)" ]; then
              sudo apt install git -y
            fi
            if [ -d $HOME/projects/kse ]; then
              if [ -d $HOME/projects ]; then
                mkdir $HOME/projects
              fi
              cd $HOME/projects
              git clone https://${{secrets.GITHUB_USERNAME}}:${{secrets.GITHUB_TOKEN}}@github.com/luongvantuit/kse.git
            else 
              cd $HOME/projects/kse
              git pull origin master
            cd $HOME/projects/kse
            sudo docker-compose up --build -d be
            sudo docker-compose up --build -d fe
